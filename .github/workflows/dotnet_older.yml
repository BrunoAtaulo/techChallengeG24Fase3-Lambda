name: CI/CD Deploy to AWS Lambda 2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'
          
      - name: Install dependencies Build
        run: dotnet restore ./src/AWS_lambda_Auth/AWS_lambda_Auth.csproj
        
      - name: Build
        run: dotnet build ./src/AWS_lambda_Auth/AWS_lambda_Auth.csproj --configuration Release
      
      - name: Publish artifact
        uses: actions/upload-artifact@v3  # Updated version
        with:
          name: app
          path: ./src/AWS_lambda_Auth/bin/Release/net8.0/
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     AWS_REGION: eu-north-1
     CognitoClientId: ${{ secrets.COGNITO_CLIENT_ID }}
     CognitoUserPoolId: ${{ secrets.COGNITO_USER_POOL_ID }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Download artifact
        uses: actions/download-artifact@v3  # Updated version
        with:
          name: app
          path: .
          
      - name: Install AWS CLI
        run: dotnet tool install -g Amazon.Lambda.Tools
      
      - name: Deploy to AWS Lambda
        env:
            COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
            COGNITO_USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID }}
        run: dotnet lambda deploy-serverless -sn AWSlambdaAuth -sb s3lambdafiap -t serverless.template --region us-east-1 --parameter-overrides CognitoClientId=$COGNITO_CLIENT_ID CognitoUserPoolId=$COGNITO_USER_POOL_ID

